- hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning

  vars:
      instance_type: t2.micro
      security_group: koko-sre-assessment
      image: ami-0080e4c5bc078760e
      region: us-east-1
      keypair: jenkins-server
      count: 1


  tasks:
    - name: Create New security group with below given name
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for Newly Created EC2 Instance
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          # define an inbound rule to expose port 5000
          - proto: tcp
            from_port: 5000
            to_port: 5000
            cidr_ip: 0.0.0.0/0
           # port for Docker API Access 
          - proto: tcp
            from_port: 2375
            to_port: 2375
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: Launch the new t2 micro EC2 Instance
      become: True
      local_action: ec2
                    group={{ security_group }}
                    instance_type={{ instance_type}}
                    image={{ image }}
                    wait=true
                    region={{ region }}
                    keypair={{ keypair }}
                    count={{count}}
      register: ec2
    - name: Set the IP of the newly created EC2 instance
      set_fact:
        ec2_instance_ip: "{{ ec2.instances[0].public_ip }}"
    - name: Add the IP to the known hosts file
      local_action: command ssh-keyscan -H "{{ ec2_instance_ip }}" >> ~/.ssh/known_hosts

- hosts: ec2_instance_ip
  become: true
  tasks: 
  - name: Install aptitude
    apt:
      name: aptitude
      state: latest
  - name: Install required system packages
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
  - name: Add Docker GPG apt Key
    apt_key:
      url: 'https://download.docker.com/linux/ubuntu/gpg'
      state: present
  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present
  - name: Install Docker
    apt:
      name: docker.io
      state: present
  - name: Add user to the docker group
    user:
      name: root
      groups: docker
      append: yes
  - name: Restart Docker service
    service:
      name: docker
      state: restarted
  - name: Log in to Docker Hub 
    docker_login:
      username: <dockerhub-username>
      password: <dockerhub-access-token>
  - name: Pull image from Docker Hub 
    docker_image:
      name: melvinkimathi/koko-sre-assessment:v1.1.1
      source: pull
  - name: Start up a Docker container using the pulled image and expose port 5000 
    docker_container:
      name: koko-sre-assessment 
      image: melvinkimathi/koko-sre-assessment:v1.1.1 
      state: started 
      ports:
        - "5000:5000"

