- hosts: localhost
  become: true

  tasks:
    - name: Create a security group
      amazon.aws.ec2_security_group:
        name: koko-sre-assessment
        description: KOKO SRE assessment security group.
        region: us-east-1
        vpc_id: vpc-04e0a7049e32e9957
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          # define an inbound rule to expose port 5000
          - proto: tcp
            from_port: 5000
            to_port: 5000
            cidr_ip: 0.0.0.0/0
           # port for Docker API Access 
          - proto: tcp
            from_port: 2375
            to_port: 2375
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: security_group
    - name: Create EC2 Instance
      amazon.aws.ec2_instance:
        name: koko-sre-assessment
        region: us-east-1
        key_name: ansible--to-manage-remote-machines
        instance_type: t2.micro
        security_group: koko-sre-assessment
        vpc_subnet_id: subnet-0565633e9a42bd845
        state: running
        network:
          assign_public_ip: true
          delete_on_termination: true
        image_id: ami-053b0d53c279acc90
      register: ec2_instance
    - name: Print public ip address
      debug:
        var: ec2_instance.instances[0].network_interfaces[0].association.public_ip
    - name: Ping the EC2 Instance
      ping:
        data: "{{ ec2_instance.instances[0].network_interfaces[0].association.public_ip }}"
    - name: Add the new instance to the Ansible inventory
      add_host:
        name:  "{{ ec2_instance.instances[0].network_interfaces[0].association.public_ip }}"
        groups: myhosts
    - name: Wait for SSH port become open on the new EC2 instance
      wait_for:
        host: myhosts
        port: 22
        delay: 10
        timeout: 320

- hosts: myhosts
  become: true
  tasks: 
  - name: Update package repositories
    apt:
      update_cache: yes
  - name: Install aptitude
    apt:
      name: aptitude
      state: latest
  - name: Install required system packages
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
  - name: Add Docker GPG apt Key
    apt_key:
      url: 'https://download.docker.com/linux/ubuntu/gpg'
      state: present
  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present
  - name: Install Docker
    apt:
      name: docker.io
      state: present
  - name: Add user to the docker group
    user:
      name: root
      groups: docker
      append: yes
  - name: Restart Docker service
    service:
      name: docker
      state: restarted
  - name: Log in to Docker Hub 
    community.docker.docker_login:
      username: <docker-hub-username>
      password: <docker-hub-access-token>
  - name: Pull image from Docker Hub 
    community.docker.docker_image:
      name: melvinkimathi/koko-sre-assessment:v1.1.1
      source: pull
  - name: Start up a Docker container using the pulled image and expose port 5000 
    community.docker.docker_container:
      name: koko-sre-assessment 
      image: melvinkimathi/koko-sre-assessment:v1.1.1 
      state: started 
      ports:
        - "5000:5000"